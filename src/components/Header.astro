---
const currentPath = Astro.url.pathname;

// Language detection and switcher logic
const currentLang = currentPath.startsWith('/de/') ? 'de' : currentPath.startsWith('/en/') ? 'en' : 'en';

// Generate language switch URLs
function getLanguageSwitchUrls(path: string) {
  // Remove language prefix if it exists
  let cleanPath = path.replace(/^\/(en|de)\//, '/');
  if (cleanPath === '/') cleanPath = '';
  
  return {
    en: `/en${cleanPath}`,
    de: `/de${cleanPath}`
  };
}

const langUrls = getLanguageSwitchUrls(currentPath);

const languages = [
  { code: 'en', name: 'English', flag: 'ðŸ‡ºðŸ‡¸' },
  { code: 'de', name: 'Deutsch', flag: 'ðŸ‡©ðŸ‡ª' }
];

// Define navigation links
const navLinks = [
  { text: "Home", href: "/" },
  { 
    text: "Features", 
    href: "/#features",
    submenu: [
      { text: "Meal Planner", href: "/features/meal-planning" },
      { text: "Recipe Organizer", href: "/features/recipe-organizer" },
    ]
  },
  { 
    text: "Resources", 
    href: "/guides/how-to-organize-recipes",
    submenu: [
      { text: "Best Recipe Apps", href: "/best-all-recipe-app" },
      { text: "App Comparisons", href: "/comparisons/tastebuddy-vs-allrecipes" },
      { text: "Cooking Guides", href: "/guides/how-to-organize-recipes" },
    ]
  },
  { text: "Recipes", href: "/en/recipes" },
  { text: "About", href: "/about" },
  { text: "Blog", href: "/en/blog" },
  { text: "Contact", href: "/contact" },
  { text: "FAQ", href: "/#faq" },
];
---

<header class="sticky top-0 z-50 bg-[#1C2513]/90 backdrop-blur-md border-b border-[#2A2D24]/30">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex justify-between items-center h-16 sm:h-20">
      <!-- Logo -->
      <a href="/" class="flex items-center space-x-3" aria-label="TasteBuddy Homepage">
        <img 
          src="/AppIcon.png" 
          alt="TasteBuddy App Icon" 
          class="w-10 h-10 rounded-xl"
          width="40"
          height="40"
          loading="eager"
          decoding="sync"
        />
        <span class="text-white text-xl font-semibold hidden sm:inline-block">TasteBuddy</span>
      </a>

      <!-- Desktop Navigation -->
      <nav class="hidden md:flex space-x-8">
        {navLinks.map((link) => (
          <a 
            href={link.href} 
            class={`text-sm font-medium transition-colors duration-200 hover:text-[#00CE31] ${
              currentPath === link.href || (link.href !== "/" && currentPath.startsWith(link.href)) 
                ? "text-[#00CE31]" 
                : "text-gray-300"
            }`}
          >
            {link.text}
          </a>
        ))}
      </nav>

      <!-- Right side items container -->
      <div class="flex items-center space-x-4">
        <!-- Mobile menu button -->
        <button id="mobile-menu-button" class="md:hidden p-2 rounded-md text-white hover:text-[#00CE31]" aria-label="Menu">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
          </svg>
        </button>

        <!-- Language Switcher -->
        <div class="hidden md:flex items-center">
          <div class="relative group">
            <button class="flex items-center space-x-2 text-sm text-gray-300 hover:text-[#00CE31] transition-all duration-300 px-3 py-2 rounded-lg hover:bg-[#1C2513]/40">
              <span>{languages.find(lang => lang.code === currentLang)?.flag}</span>
              <span>{languages.find(lang => lang.code === currentLang)?.name}</span>
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
              </svg>
            </button>
            <div class="absolute right-0 mt-2 w-40 bg-[#1C2513] border border-[#2A2D24]/30 rounded-lg shadow-lg opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200 z-50">
              {languages.map((lang) => (
                <a
                  href={langUrls[lang.code as keyof typeof langUrls]}
                  class={`flex items-center space-x-2 px-4 py-2 text-sm hover:bg-[#2A2D24]/50 first:rounded-t-lg last:rounded-b-lg transition-all duration-200 ${
                    currentLang === lang.code ? 'text-[#00CE31] bg-[#2A2D24]/30' : 'text-gray-300 hover:text-white'
                  }`}
                >
                  <span>{lang.flag}</span>
                  <span>{lang.name}</span>
                </a>
              ))}
            </div>
          </div>
        </div>

        <!-- Feedback Link -->
        <div class="hidden md:block">
          <a
            href="mailto:sebastian@klaiber.app?subject=Hey TasteBuddy Team!"
            class="text-sm text-gray-300 hover:text-[#00CE31] transition-all duration-300 hover:bg-[#1C2513]/40 px-3 py-2 rounded-lg"
            title="We read every message!"
          >
            ðŸ¤” Questions? Ideas? We're all ears!
          </a>
        </div>

        <!-- Download App button -->
        <div class="hidden md:block">
          <a
            href="https://apps.apple.com/app/id6554007741"
            class="btn-primary text-sm"
            target="_blank"
            rel="noopener noreferrer"
          >
            Download App
          </a>
        </div>
      </div>
    </div>
  </div>

  <!-- Mobile Navigation Menu (hidden by default) -->
  <div id="mobile-menu" class="hidden md:hidden bg-[#1C2513] border-b border-[#2A2D24]/30">
    <div class="px-2 pt-2 pb-3 space-y-1">
      {navLinks.map((link) => (
        <a
          href={link.href}
          class={`block px-3 py-2 rounded-md text-base font-medium ${
            currentPath === link.href || (link.href !== "/" && currentPath.startsWith(link.href))
              ? "bg-[#1C2513]/80 text-[#00CE31]"
              : "text-gray-300 hover:bg-[#1C2513]/80 hover:text-white"
          }`}
        >
          {link.text}
        </a>
      ))}
      
      <!-- Mobile Language Switcher -->
      <div class="mt-4 px-3">
        <p class="text-xs text-gray-400 uppercase tracking-wide mb-2">Language</p>
        <div class="space-y-1">
          {languages.map((lang) => (
            <a
              href={langUrls[lang.code as keyof typeof langUrls]}
              class={`flex items-center space-x-2 px-3 py-2 rounded-md text-sm transition-all duration-300 ${
                currentLang === lang.code ? 'bg-[#2A2D24]/50 text-[#00CE31]' : 'text-gray-300 hover:bg-[#1C2513]/80 hover:text-white'
              }`}
            >
              <span>{lang.flag}</span>
              <span>{lang.name}</span>
            </a>
          ))}
        </div>
      </div>
      
      <div class="mt-4 px-3 space-y-3">
        <a
          href="mailto:sebastian@klaiber.app?subject=Hey TasteBuddy Team!"
          class="block text-center px-3 py-2 rounded-md text-sm text-gray-300 hover:text-[#00CE31] hover:bg-[#1C2513]/80 transition-all duration-300"
        >
          ðŸ¤” Questions? Ideas? We're all ears!
        </a>
        <a
          href="https://apps.apple.com/app/id6554007741"
          class="btn-primary block text-center"
          target="_blank"
          rel="noopener noreferrer"
        >
          Download App
        </a>
      </div>
    </div>
  </div>
</header>

<script>
  // Handle mobile menu toggle
  document.addEventListener('DOMContentLoaded', () => {
    const mobileMenuButton = document.getElementById('mobile-menu-button');
    const mobileMenu = document.getElementById('mobile-menu');

    if (mobileMenuButton && mobileMenu) {
      mobileMenuButton.addEventListener('click', () => {
        const expanded = mobileMenuButton.getAttribute('aria-expanded') === 'true';
        mobileMenuButton.setAttribute('aria-expanded', (!expanded).toString());
        mobileMenu.classList.toggle('hidden');
      });
    }
  });
</script>